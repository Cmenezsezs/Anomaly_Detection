import pandas as pd  
import numpy as np  
from sklearn.ensemble import IsolationForest  
import matplotlib.pyplot as plt  
  
# Load time series data  
def load_data(file_path):  
   """Load time series data from a CSV file."""  
   data = pd.read_csv(file_path, index_col='date', parse_dates=['date'])  
   return data  
  
# Preprocess data  
def preprocess_data(data):  
   """Preprocess data by converting to a numpy array and scaling."""  
   data_array = data.values  
   scaler = MinMaxScaler()  
   scaled_data = scaler.fit_transform(data_array)  
   return scaled_data  
  
# Detect anomalies  
def detect_anomalies(data, contamination=0.1):  
   """Detect anomalies using Isolation Forest."""  
   isolation_forest = IsolationForest(contamination=contamination)  
   isolation_forest.fit(data)  
   anomalies = isolation_forest.predict(data)  
   return anomalies  
  
# Visualize results  
def visualize_results(data, anomalies):  
   """Visualize time series data with anomalies highlighted."""  
   plt.figure(figsize=(10, 6))  
   plt.plot(data)  
   anomaly_indices = np.where(anomalies == -1)[0]  
   plt.scatter(anomaly_indices, data[anomaly_indices], color='red')  
   plt.title('Time Series Data with Anomalies')  
   plt.xlabel('Time')  
   plt.ylabel('Value')  
   plt.show()  
  
# Main function  
def main():  
   file_path = 'data.csv'  # replace with your data file  
   data = load_data(file_path)  
   scaled_data = preprocess_data(data)  
   anomalies = detect_anomalies(scaled_data)  
   visualize_results(data, anomalies)  
  
if __name__ == '__main__':  
   main()
